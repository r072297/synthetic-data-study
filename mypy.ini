[mypy]
python_version = 3.13
warn_return_any = True
warn_unused_configs = True
disallow_untyped_defs = True
disallow_incomplete_defs = True
check_untyped_defs = True
disallow_untyped_decorators = True
no_implicit_optional = True
warn_redundant_casts = True
warn_unused_ignores = True
warn_no_return = True
warn_unreachable = True
strict_equality = True
show_error_codes = True
pretty = True

# ‚úÖ Phase 1 COMPLETED: Foundation & Configuration
# - src/domain_types.py: Domain types module created (renamed from types.py)
# - src/infra/utils.py: Fully typed
# - src/infra/logger.py: Fully typed  
# - src/infra/filesystem.py: Fully typed
# - src/infra/configs.py: Fully typed

# ‚úÖ Phase 2 COMPLETED: Infrastructure Services
# - src/infra/spmf_adapter.py: Fully typed (SPMF integration)
# - src/infra/configs.py: Fully typed (Config processing with jsonschema validation)
# - src/domain_types.py: Expanded with SPMF and pipeline types
# - All infra package: 100% type coverage

# ‚úÖ Phase 3 COMPLETED: Core Business Logic
# - src/servicos/simulacao.py: Fully typed (Simulation service)
# - src/servicos/preprocessamento.py: Fully typed (Preprocessing service)
# - src/servicos/integracao_spmf.py: Fully typed (SPMF integration service)
# - src/servicos/analise.py: Partially typed (Analysis service)
# - src/gerador.py: Fully typed (Generator orchestration)
# - src/orquestrador.py: Partially typed (Pipeline orchestrator)
# - src/domain_types.py: Expanded with simulation and analysis types
# - All core services: Major type coverage achieved

# üîÑ Phase 4 IN PROGRESS: Application Layer
# - main.py: Entry point typing
# - src/pipeline.py: Pipeline runner typing
# - src/batch_runner.py: Batch execution typing
# - src/tui/tui.py: Main TUI application typing
# - src/tui/tui_configs.py: Configuration interface typing
# - src/tui/tui_gerador.py: Generator interface typing
# - src/tui/tui_pipeline.py: Pipeline interface typing
# - src/domain_types.py: Expanded with TUI and application types

# Configura√ß√µes espec√≠ficas por m√≥dulo
[mypy-textual.*]
ignore_missing_imports = True

[mypy-simpy.*]
ignore_missing_imports = True

[mypy-yaml.*]
ignore_missing_imports = True

[mypy-pytest.*]
ignore_missing_imports = True

# Exclus√µes tempor√°rias durante implementa√ß√£o
# Remover gradualmente conforme as fases s√£o conclu√≠das
[mypy-tests.*]
disallow_untyped_defs = False

# Para bibliotecas sem stubs de tipo
[mypy-sqlalchemy.*]
ignore_missing_imports = True
